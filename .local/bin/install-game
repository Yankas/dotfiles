#!/usr/bin/env python3
from os import environ
import os
import shellutils
import psutil

def error(msg):
    print(msg)
    exit(1)

def is_network_path(path: str) -> bool:

    root_type = ""
    for part in psutil.disk_partitions():
        if part.mountpoint == '/':
            root_type = part.fstype
            continue

        if path.startswith(part.mountpoint):
            return part.fstype == "nfs"

    return root_type == "nfs"

def get_install_dir() -> str:
    if environ.get('GAMES') is None:
        error("ERROR: The enivornment variable 'GAMES' is not set.")
    dir = environ.get('GAMES')
    
    if os.path.isfile(dir):
        error("ERROR: The install path '" + dir + "' is a file (not a directory) aborting.")
    elif not os.path.isdir(dir):
        should_mkdir = shellutils.ask_yes_no("WARNING: The install path: '" + dir + "' does not exist. \nCreate the missing directory? (Y/n)")
        if not should_mkdir:
            error("ERROR: directory was not created, aborted by user.")
        else:
            os.makedirs(dir)
    if not os.access(dir, os.W_OK):
        error("ERROR: The 'GAMES' directory: '" + dir + "' is not writable for the current user.")
    return dir

def get_install_mode(file):
    if shellutils.is_archive(file):
        return "ARCHIVE"
    if os.path.isdir(file):
        return "DIRECTORY"
    print("bla")

if __name__ == "__main__":
    import sys
    file = sys.argv[1]
    install_dir = get_install_dir()
    if get_install_mode(file) == "ARCHIVE":
        if is_network_path(file):
            import shutil
            file = shutil.copy(file, "/tmp/")
        if not shellutils.extract(file, install_dir):
            error("ERROR: Failed to extract file: '" + file + "' to '" + install_dir + "'")

    print("Hello, World!")
